# Makefile.in generated by automake 1.14.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/kdeneur
pkgincludedir = $(includedir)/kdeneur
pkglibdir = $(libdir)/kdeneur
pkglibexecdir = $(libexecdir)/kdeneur
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = kdeneur$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_kdeneur_OBJECTS = kdeneur-addrules.$(OBJEXT) \
	kdeneur-adduseraction.$(OBJEXT) kdeneur-edithotkey.$(OBJEXT) \
	kdeneur-frmabout.$(OBJEXT) \
	kdeneur-frmaddabbreviature.$(OBJEXT) \
	kdeneur-frmsettings.$(OBJEXT) kdeneur-getnameapp.$(OBJEXT) \
	kdeneur-kdeneur.$(OBJEXT) kdeneur-kxneurtray.$(OBJEXT) \
	kdeneur-main.$(OBJEXT) kdeneur-ruleschange.$(OBJEXT) \
	xkb.$(OBJEXT) kdeneur-xneurconfig.$(OBJEXT)
nodist_kdeneur_OBJECTS = kdeneur-moc_addrules.$(OBJEXT) \
	kdeneur-moc_adduseraction.$(OBJEXT) \
	kdeneur-moc_edithotkey.$(OBJEXT) \
	kdeneur-moc_frmabout.$(OBJEXT) \
	kdeneur-moc_frmaddabbreviature.$(OBJEXT) \
	kdeneur-moc_frmsettings.$(OBJEXT) \
	kdeneur-moc_getnameapp.$(OBJEXT) kdeneur-moc_kdeneur.$(OBJEXT) \
	kdeneur-moc_kxneurtray.$(OBJEXT) \
	kdeneur-moc_ruleschange.$(OBJEXT) \
	kdeneur-moc_xneurconfig.$(OBJEXT)
kdeneur_OBJECTS = $(am_kdeneur_OBJECTS) $(nodist_kdeneur_OBJECTS)
kdeneur_LDADD = $(LDADD)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
kdeneur_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(kdeneur_CXXFLAGS) \
	$(CXXFLAGS) $(kdeneur_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(kdeneur_SOURCES) $(nodist_kdeneur_SOURCES)
DIST_SOURCES = $(kdeneur_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/crew/develop/xneur/kdeneur/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/crew/develop/xneur/kdeneur/missing autoconf
AUTOHEADER = ${SHELL} /home/crew/develop/xneur/kdeneur/missing autoheader
AUTOMAKE = ${SHELL} /home/crew/develop/xneur/kdeneur/missing automake-1.14
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFAULT_CFLAGS = -Wall -Wextra -Werror -g0 -fPIC  -lkdecore -lplasma
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBICONV = -liconv
LIBINTL = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/crew/develop/xneur/kdeneur/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MSGFMT = /usr/bin/msgfmt
MSGFMT_015 = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = kdeneur
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POSUB = po
QTCORE_CFLAGS = -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtCore 
QTCORE_LIBS = -lQtCore 
QTDBUS_CFLAGS = -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtDBus -I/usr/include/qt4 -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I/usr/include/qt4/QtCore 
QTDBUS_LIBS = -lQtDBus -lQtXml -lQtCore 
QTGUI_CFLAGS = -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I/usr/include/qt4/QtCore 
QTGUI_LIBS = -lQtGui -lQtCore 
QTUITOOLS_CFLAGS = -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtUiTools -I/usr/include/qt4 -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I/usr/include/qt4/QtCore 
QTUITOOLS_LIBS = -lQtUiTools -lQtXml -lQtCore 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
USE_NLS = yes
VERSION = 0.17.0
X11_CFLAGS = 
X11_LIBS = -lX11 
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
XMKMF = 
XNEURCONF_CFLAGS = -I/usr/local/include 
XNEURCONF_LIBS = -L/usr/local/lib -lxnconfig -lpcre -lpthread -ldl -lpcre 
XNEURLIB_CFLAGS = -I/usr/local/include 
XNEURLIB_LIBS = -L/usr/local/lib -lxneur -lpcre -lenchant -lpthread -ldl 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
abs_builddir = /home/crew/develop/xneur/kdeneur/src
abs_srcdir = /home/crew/develop/xneur/kdeneur/src
abs_top_builddir = /home/crew/develop/xneur/kdeneur
abs_top_srcdir = /home/crew/develop/xneur/kdeneur
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/crew/develop/xneur/kdeneur/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
INCLUDES = -DPACKAGE_PIXMAPS_DIR=\""${pkgdatadir}/pixmaps"\" 	\
		-DLOCALEDIR=\""${pkgdatadir}/i18n"\" 				\
		-DXNEUR_PLUGIN_DIR=\""${exec_prefix}/lib/xneur"\"	\
		-DSHAREDIR=\""${pkgdatadir}"\" 				

kdeneur_SOURCES = \
		addrules.cpp \
		adduseraction.cpp \
		edithotkey.cpp \
		frmabout.cpp \
		frmaddabbreviature.cpp \
		frmsettings.cpp \
		getnameapp.cpp \
		kdeneur.cpp \
		kxneurtray.cpp \
		main.cpp \
		ruleschange.cpp \
		xkb.c \
		xneurconfig.cpp \
		xkb.h	\
		xneurconfig.h \
		tabbar.h

nodist_kdeneur_SOURCES = \
		moc_addrules.cpp \
		moc_adduseraction.cpp \
		moc_edithotkey.cpp \
		moc_frmabout.cpp \
		moc_frmaddabbreviature.cpp \
		moc_frmsettings.cpp \
		moc_getnameapp.cpp \
		moc_kdeneur.cpp \
		moc_kxneurtray.cpp \
		moc_ruleschange.cpp \
		moc_xneurconfig.cpp \
		ui_addrules.h \
		ui_adduseraction.h 	\
		ui_edithotkey.h	\
		ui_frmabout.h	\
		ui_frmaddabbreviature.h	\
		ui_frmsettings.h	\
		ui_getnameapp.h	\
		ui_ruleschange.h	

EXTRA_DIST = \
	$(nodist_kdeneur_SOURCES:moc_%.cpp=%.h) 


# This line ensures that generated moc_*.cpp and resources.cpp files are
# deleted when we make clean.
CLEANFILES = $(filter moc_%.cpp,$(nodist_kdeneur_SOURCES)) resources.cpp $(filter ui_%.h,$(nodist_kdeneur_SOURCES))
kdeneur_CXXFLAGS =  -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtCore  -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I/usr/include/qt4/QtCore  -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtUiTools -I/usr/include/qt4 -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I/usr/include/qt4/QtCore  -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtDBus -I/usr/include/qt4 -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I/usr/include/qt4/QtCore  -I/usr/local/include  -Wall -Wextra -Werror -g0 -fPIC  -lkdecore -lplasma
kdeneur_LDFLAGS = -lX11  -lQtCore  -lQtGui -lQtCore  -lQtUiTools -lQtXml -lQtCore  -lQtDBus -lQtXml -lQtCore  -L/usr/local/lib -lxnconfig -lpcre -lpthread -ldl -lpcre  
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

kdeneur$(EXEEXT): $(kdeneur_OBJECTS) $(kdeneur_DEPENDENCIES) $(EXTRA_kdeneur_DEPENDENCIES) 
	@rm -f kdeneur$(EXEEXT)
	$(AM_V_CXXLD)$(kdeneur_LINK) $(kdeneur_OBJECTS) $(kdeneur_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/kdeneur-addrules.Po
include ./$(DEPDIR)/kdeneur-adduseraction.Po
include ./$(DEPDIR)/kdeneur-edithotkey.Po
include ./$(DEPDIR)/kdeneur-frmabout.Po
include ./$(DEPDIR)/kdeneur-frmaddabbreviature.Po
include ./$(DEPDIR)/kdeneur-frmsettings.Po
include ./$(DEPDIR)/kdeneur-getnameapp.Po
include ./$(DEPDIR)/kdeneur-kdeneur.Po
include ./$(DEPDIR)/kdeneur-kxneurtray.Po
include ./$(DEPDIR)/kdeneur-main.Po
include ./$(DEPDIR)/kdeneur-moc_addrules.Po
include ./$(DEPDIR)/kdeneur-moc_adduseraction.Po
include ./$(DEPDIR)/kdeneur-moc_edithotkey.Po
include ./$(DEPDIR)/kdeneur-moc_frmabout.Po
include ./$(DEPDIR)/kdeneur-moc_frmaddabbreviature.Po
include ./$(DEPDIR)/kdeneur-moc_frmsettings.Po
include ./$(DEPDIR)/kdeneur-moc_getnameapp.Po
include ./$(DEPDIR)/kdeneur-moc_kdeneur.Po
include ./$(DEPDIR)/kdeneur-moc_kxneurtray.Po
include ./$(DEPDIR)/kdeneur-moc_ruleschange.Po
include ./$(DEPDIR)/kdeneur-moc_xneurconfig.Po
include ./$(DEPDIR)/kdeneur-ruleschange.Po
include ./$(DEPDIR)/kdeneur-xneurconfig.Po
include ./$(DEPDIR)/xkb.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

kdeneur-addrules.o: addrules.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-addrules.o -MD -MP -MF $(DEPDIR)/kdeneur-addrules.Tpo -c -o kdeneur-addrules.o `test -f 'addrules.cpp' || echo '$(srcdir)/'`addrules.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-addrules.Tpo $(DEPDIR)/kdeneur-addrules.Po
#	$(AM_V_CXX)source='addrules.cpp' object='kdeneur-addrules.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-addrules.o `test -f 'addrules.cpp' || echo '$(srcdir)/'`addrules.cpp

kdeneur-addrules.obj: addrules.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-addrules.obj -MD -MP -MF $(DEPDIR)/kdeneur-addrules.Tpo -c -o kdeneur-addrules.obj `if test -f 'addrules.cpp'; then $(CYGPATH_W) 'addrules.cpp'; else $(CYGPATH_W) '$(srcdir)/addrules.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-addrules.Tpo $(DEPDIR)/kdeneur-addrules.Po
#	$(AM_V_CXX)source='addrules.cpp' object='kdeneur-addrules.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-addrules.obj `if test -f 'addrules.cpp'; then $(CYGPATH_W) 'addrules.cpp'; else $(CYGPATH_W) '$(srcdir)/addrules.cpp'; fi`

kdeneur-adduseraction.o: adduseraction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-adduseraction.o -MD -MP -MF $(DEPDIR)/kdeneur-adduseraction.Tpo -c -o kdeneur-adduseraction.o `test -f 'adduseraction.cpp' || echo '$(srcdir)/'`adduseraction.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-adduseraction.Tpo $(DEPDIR)/kdeneur-adduseraction.Po
#	$(AM_V_CXX)source='adduseraction.cpp' object='kdeneur-adduseraction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-adduseraction.o `test -f 'adduseraction.cpp' || echo '$(srcdir)/'`adduseraction.cpp

kdeneur-adduseraction.obj: adduseraction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-adduseraction.obj -MD -MP -MF $(DEPDIR)/kdeneur-adduseraction.Tpo -c -o kdeneur-adduseraction.obj `if test -f 'adduseraction.cpp'; then $(CYGPATH_W) 'adduseraction.cpp'; else $(CYGPATH_W) '$(srcdir)/adduseraction.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-adduseraction.Tpo $(DEPDIR)/kdeneur-adduseraction.Po
#	$(AM_V_CXX)source='adduseraction.cpp' object='kdeneur-adduseraction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-adduseraction.obj `if test -f 'adduseraction.cpp'; then $(CYGPATH_W) 'adduseraction.cpp'; else $(CYGPATH_W) '$(srcdir)/adduseraction.cpp'; fi`

kdeneur-edithotkey.o: edithotkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-edithotkey.o -MD -MP -MF $(DEPDIR)/kdeneur-edithotkey.Tpo -c -o kdeneur-edithotkey.o `test -f 'edithotkey.cpp' || echo '$(srcdir)/'`edithotkey.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-edithotkey.Tpo $(DEPDIR)/kdeneur-edithotkey.Po
#	$(AM_V_CXX)source='edithotkey.cpp' object='kdeneur-edithotkey.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-edithotkey.o `test -f 'edithotkey.cpp' || echo '$(srcdir)/'`edithotkey.cpp

kdeneur-edithotkey.obj: edithotkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-edithotkey.obj -MD -MP -MF $(DEPDIR)/kdeneur-edithotkey.Tpo -c -o kdeneur-edithotkey.obj `if test -f 'edithotkey.cpp'; then $(CYGPATH_W) 'edithotkey.cpp'; else $(CYGPATH_W) '$(srcdir)/edithotkey.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-edithotkey.Tpo $(DEPDIR)/kdeneur-edithotkey.Po
#	$(AM_V_CXX)source='edithotkey.cpp' object='kdeneur-edithotkey.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-edithotkey.obj `if test -f 'edithotkey.cpp'; then $(CYGPATH_W) 'edithotkey.cpp'; else $(CYGPATH_W) '$(srcdir)/edithotkey.cpp'; fi`

kdeneur-frmabout.o: frmabout.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-frmabout.o -MD -MP -MF $(DEPDIR)/kdeneur-frmabout.Tpo -c -o kdeneur-frmabout.o `test -f 'frmabout.cpp' || echo '$(srcdir)/'`frmabout.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-frmabout.Tpo $(DEPDIR)/kdeneur-frmabout.Po
#	$(AM_V_CXX)source='frmabout.cpp' object='kdeneur-frmabout.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-frmabout.o `test -f 'frmabout.cpp' || echo '$(srcdir)/'`frmabout.cpp

kdeneur-frmabout.obj: frmabout.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-frmabout.obj -MD -MP -MF $(DEPDIR)/kdeneur-frmabout.Tpo -c -o kdeneur-frmabout.obj `if test -f 'frmabout.cpp'; then $(CYGPATH_W) 'frmabout.cpp'; else $(CYGPATH_W) '$(srcdir)/frmabout.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-frmabout.Tpo $(DEPDIR)/kdeneur-frmabout.Po
#	$(AM_V_CXX)source='frmabout.cpp' object='kdeneur-frmabout.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-frmabout.obj `if test -f 'frmabout.cpp'; then $(CYGPATH_W) 'frmabout.cpp'; else $(CYGPATH_W) '$(srcdir)/frmabout.cpp'; fi`

kdeneur-frmaddabbreviature.o: frmaddabbreviature.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-frmaddabbreviature.o -MD -MP -MF $(DEPDIR)/kdeneur-frmaddabbreviature.Tpo -c -o kdeneur-frmaddabbreviature.o `test -f 'frmaddabbreviature.cpp' || echo '$(srcdir)/'`frmaddabbreviature.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-frmaddabbreviature.Tpo $(DEPDIR)/kdeneur-frmaddabbreviature.Po
#	$(AM_V_CXX)source='frmaddabbreviature.cpp' object='kdeneur-frmaddabbreviature.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-frmaddabbreviature.o `test -f 'frmaddabbreviature.cpp' || echo '$(srcdir)/'`frmaddabbreviature.cpp

kdeneur-frmaddabbreviature.obj: frmaddabbreviature.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-frmaddabbreviature.obj -MD -MP -MF $(DEPDIR)/kdeneur-frmaddabbreviature.Tpo -c -o kdeneur-frmaddabbreviature.obj `if test -f 'frmaddabbreviature.cpp'; then $(CYGPATH_W) 'frmaddabbreviature.cpp'; else $(CYGPATH_W) '$(srcdir)/frmaddabbreviature.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-frmaddabbreviature.Tpo $(DEPDIR)/kdeneur-frmaddabbreviature.Po
#	$(AM_V_CXX)source='frmaddabbreviature.cpp' object='kdeneur-frmaddabbreviature.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-frmaddabbreviature.obj `if test -f 'frmaddabbreviature.cpp'; then $(CYGPATH_W) 'frmaddabbreviature.cpp'; else $(CYGPATH_W) '$(srcdir)/frmaddabbreviature.cpp'; fi`

kdeneur-frmsettings.o: frmsettings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-frmsettings.o -MD -MP -MF $(DEPDIR)/kdeneur-frmsettings.Tpo -c -o kdeneur-frmsettings.o `test -f 'frmsettings.cpp' || echo '$(srcdir)/'`frmsettings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-frmsettings.Tpo $(DEPDIR)/kdeneur-frmsettings.Po
#	$(AM_V_CXX)source='frmsettings.cpp' object='kdeneur-frmsettings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-frmsettings.o `test -f 'frmsettings.cpp' || echo '$(srcdir)/'`frmsettings.cpp

kdeneur-frmsettings.obj: frmsettings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-frmsettings.obj -MD -MP -MF $(DEPDIR)/kdeneur-frmsettings.Tpo -c -o kdeneur-frmsettings.obj `if test -f 'frmsettings.cpp'; then $(CYGPATH_W) 'frmsettings.cpp'; else $(CYGPATH_W) '$(srcdir)/frmsettings.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-frmsettings.Tpo $(DEPDIR)/kdeneur-frmsettings.Po
#	$(AM_V_CXX)source='frmsettings.cpp' object='kdeneur-frmsettings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-frmsettings.obj `if test -f 'frmsettings.cpp'; then $(CYGPATH_W) 'frmsettings.cpp'; else $(CYGPATH_W) '$(srcdir)/frmsettings.cpp'; fi`

kdeneur-getnameapp.o: getnameapp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-getnameapp.o -MD -MP -MF $(DEPDIR)/kdeneur-getnameapp.Tpo -c -o kdeneur-getnameapp.o `test -f 'getnameapp.cpp' || echo '$(srcdir)/'`getnameapp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-getnameapp.Tpo $(DEPDIR)/kdeneur-getnameapp.Po
#	$(AM_V_CXX)source='getnameapp.cpp' object='kdeneur-getnameapp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-getnameapp.o `test -f 'getnameapp.cpp' || echo '$(srcdir)/'`getnameapp.cpp

kdeneur-getnameapp.obj: getnameapp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-getnameapp.obj -MD -MP -MF $(DEPDIR)/kdeneur-getnameapp.Tpo -c -o kdeneur-getnameapp.obj `if test -f 'getnameapp.cpp'; then $(CYGPATH_W) 'getnameapp.cpp'; else $(CYGPATH_W) '$(srcdir)/getnameapp.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-getnameapp.Tpo $(DEPDIR)/kdeneur-getnameapp.Po
#	$(AM_V_CXX)source='getnameapp.cpp' object='kdeneur-getnameapp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-getnameapp.obj `if test -f 'getnameapp.cpp'; then $(CYGPATH_W) 'getnameapp.cpp'; else $(CYGPATH_W) '$(srcdir)/getnameapp.cpp'; fi`

kdeneur-kdeneur.o: kdeneur.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-kdeneur.o -MD -MP -MF $(DEPDIR)/kdeneur-kdeneur.Tpo -c -o kdeneur-kdeneur.o `test -f 'kdeneur.cpp' || echo '$(srcdir)/'`kdeneur.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-kdeneur.Tpo $(DEPDIR)/kdeneur-kdeneur.Po
#	$(AM_V_CXX)source='kdeneur.cpp' object='kdeneur-kdeneur.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-kdeneur.o `test -f 'kdeneur.cpp' || echo '$(srcdir)/'`kdeneur.cpp

kdeneur-kdeneur.obj: kdeneur.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-kdeneur.obj -MD -MP -MF $(DEPDIR)/kdeneur-kdeneur.Tpo -c -o kdeneur-kdeneur.obj `if test -f 'kdeneur.cpp'; then $(CYGPATH_W) 'kdeneur.cpp'; else $(CYGPATH_W) '$(srcdir)/kdeneur.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-kdeneur.Tpo $(DEPDIR)/kdeneur-kdeneur.Po
#	$(AM_V_CXX)source='kdeneur.cpp' object='kdeneur-kdeneur.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-kdeneur.obj `if test -f 'kdeneur.cpp'; then $(CYGPATH_W) 'kdeneur.cpp'; else $(CYGPATH_W) '$(srcdir)/kdeneur.cpp'; fi`

kdeneur-kxneurtray.o: kxneurtray.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-kxneurtray.o -MD -MP -MF $(DEPDIR)/kdeneur-kxneurtray.Tpo -c -o kdeneur-kxneurtray.o `test -f 'kxneurtray.cpp' || echo '$(srcdir)/'`kxneurtray.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-kxneurtray.Tpo $(DEPDIR)/kdeneur-kxneurtray.Po
#	$(AM_V_CXX)source='kxneurtray.cpp' object='kdeneur-kxneurtray.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-kxneurtray.o `test -f 'kxneurtray.cpp' || echo '$(srcdir)/'`kxneurtray.cpp

kdeneur-kxneurtray.obj: kxneurtray.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-kxneurtray.obj -MD -MP -MF $(DEPDIR)/kdeneur-kxneurtray.Tpo -c -o kdeneur-kxneurtray.obj `if test -f 'kxneurtray.cpp'; then $(CYGPATH_W) 'kxneurtray.cpp'; else $(CYGPATH_W) '$(srcdir)/kxneurtray.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-kxneurtray.Tpo $(DEPDIR)/kdeneur-kxneurtray.Po
#	$(AM_V_CXX)source='kxneurtray.cpp' object='kdeneur-kxneurtray.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-kxneurtray.obj `if test -f 'kxneurtray.cpp'; then $(CYGPATH_W) 'kxneurtray.cpp'; else $(CYGPATH_W) '$(srcdir)/kxneurtray.cpp'; fi`

kdeneur-main.o: main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-main.o -MD -MP -MF $(DEPDIR)/kdeneur-main.Tpo -c -o kdeneur-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-main.Tpo $(DEPDIR)/kdeneur-main.Po
#	$(AM_V_CXX)source='main.cpp' object='kdeneur-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

kdeneur-main.obj: main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-main.obj -MD -MP -MF $(DEPDIR)/kdeneur-main.Tpo -c -o kdeneur-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-main.Tpo $(DEPDIR)/kdeneur-main.Po
#	$(AM_V_CXX)source='main.cpp' object='kdeneur-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

kdeneur-ruleschange.o: ruleschange.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-ruleschange.o -MD -MP -MF $(DEPDIR)/kdeneur-ruleschange.Tpo -c -o kdeneur-ruleschange.o `test -f 'ruleschange.cpp' || echo '$(srcdir)/'`ruleschange.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-ruleschange.Tpo $(DEPDIR)/kdeneur-ruleschange.Po
#	$(AM_V_CXX)source='ruleschange.cpp' object='kdeneur-ruleschange.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-ruleschange.o `test -f 'ruleschange.cpp' || echo '$(srcdir)/'`ruleschange.cpp

kdeneur-ruleschange.obj: ruleschange.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-ruleschange.obj -MD -MP -MF $(DEPDIR)/kdeneur-ruleschange.Tpo -c -o kdeneur-ruleschange.obj `if test -f 'ruleschange.cpp'; then $(CYGPATH_W) 'ruleschange.cpp'; else $(CYGPATH_W) '$(srcdir)/ruleschange.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-ruleschange.Tpo $(DEPDIR)/kdeneur-ruleschange.Po
#	$(AM_V_CXX)source='ruleschange.cpp' object='kdeneur-ruleschange.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-ruleschange.obj `if test -f 'ruleschange.cpp'; then $(CYGPATH_W) 'ruleschange.cpp'; else $(CYGPATH_W) '$(srcdir)/ruleschange.cpp'; fi`

kdeneur-xneurconfig.o: xneurconfig.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-xneurconfig.o -MD -MP -MF $(DEPDIR)/kdeneur-xneurconfig.Tpo -c -o kdeneur-xneurconfig.o `test -f 'xneurconfig.cpp' || echo '$(srcdir)/'`xneurconfig.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-xneurconfig.Tpo $(DEPDIR)/kdeneur-xneurconfig.Po
#	$(AM_V_CXX)source='xneurconfig.cpp' object='kdeneur-xneurconfig.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-xneurconfig.o `test -f 'xneurconfig.cpp' || echo '$(srcdir)/'`xneurconfig.cpp

kdeneur-xneurconfig.obj: xneurconfig.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-xneurconfig.obj -MD -MP -MF $(DEPDIR)/kdeneur-xneurconfig.Tpo -c -o kdeneur-xneurconfig.obj `if test -f 'xneurconfig.cpp'; then $(CYGPATH_W) 'xneurconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/xneurconfig.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-xneurconfig.Tpo $(DEPDIR)/kdeneur-xneurconfig.Po
#	$(AM_V_CXX)source='xneurconfig.cpp' object='kdeneur-xneurconfig.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-xneurconfig.obj `if test -f 'xneurconfig.cpp'; then $(CYGPATH_W) 'xneurconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/xneurconfig.cpp'; fi`

kdeneur-moc_addrules.o: moc_addrules.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_addrules.o -MD -MP -MF $(DEPDIR)/kdeneur-moc_addrules.Tpo -c -o kdeneur-moc_addrules.o `test -f 'moc_addrules.cpp' || echo '$(srcdir)/'`moc_addrules.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_addrules.Tpo $(DEPDIR)/kdeneur-moc_addrules.Po
#	$(AM_V_CXX)source='moc_addrules.cpp' object='kdeneur-moc_addrules.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_addrules.o `test -f 'moc_addrules.cpp' || echo '$(srcdir)/'`moc_addrules.cpp

kdeneur-moc_addrules.obj: moc_addrules.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_addrules.obj -MD -MP -MF $(DEPDIR)/kdeneur-moc_addrules.Tpo -c -o kdeneur-moc_addrules.obj `if test -f 'moc_addrules.cpp'; then $(CYGPATH_W) 'moc_addrules.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_addrules.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_addrules.Tpo $(DEPDIR)/kdeneur-moc_addrules.Po
#	$(AM_V_CXX)source='moc_addrules.cpp' object='kdeneur-moc_addrules.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_addrules.obj `if test -f 'moc_addrules.cpp'; then $(CYGPATH_W) 'moc_addrules.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_addrules.cpp'; fi`

kdeneur-moc_adduseraction.o: moc_adduseraction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_adduseraction.o -MD -MP -MF $(DEPDIR)/kdeneur-moc_adduseraction.Tpo -c -o kdeneur-moc_adduseraction.o `test -f 'moc_adduseraction.cpp' || echo '$(srcdir)/'`moc_adduseraction.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_adduseraction.Tpo $(DEPDIR)/kdeneur-moc_adduseraction.Po
#	$(AM_V_CXX)source='moc_adduseraction.cpp' object='kdeneur-moc_adduseraction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_adduseraction.o `test -f 'moc_adduseraction.cpp' || echo '$(srcdir)/'`moc_adduseraction.cpp

kdeneur-moc_adduseraction.obj: moc_adduseraction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_adduseraction.obj -MD -MP -MF $(DEPDIR)/kdeneur-moc_adduseraction.Tpo -c -o kdeneur-moc_adduseraction.obj `if test -f 'moc_adduseraction.cpp'; then $(CYGPATH_W) 'moc_adduseraction.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_adduseraction.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_adduseraction.Tpo $(DEPDIR)/kdeneur-moc_adduseraction.Po
#	$(AM_V_CXX)source='moc_adduseraction.cpp' object='kdeneur-moc_adduseraction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_adduseraction.obj `if test -f 'moc_adduseraction.cpp'; then $(CYGPATH_W) 'moc_adduseraction.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_adduseraction.cpp'; fi`

kdeneur-moc_edithotkey.o: moc_edithotkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_edithotkey.o -MD -MP -MF $(DEPDIR)/kdeneur-moc_edithotkey.Tpo -c -o kdeneur-moc_edithotkey.o `test -f 'moc_edithotkey.cpp' || echo '$(srcdir)/'`moc_edithotkey.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_edithotkey.Tpo $(DEPDIR)/kdeneur-moc_edithotkey.Po
#	$(AM_V_CXX)source='moc_edithotkey.cpp' object='kdeneur-moc_edithotkey.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_edithotkey.o `test -f 'moc_edithotkey.cpp' || echo '$(srcdir)/'`moc_edithotkey.cpp

kdeneur-moc_edithotkey.obj: moc_edithotkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_edithotkey.obj -MD -MP -MF $(DEPDIR)/kdeneur-moc_edithotkey.Tpo -c -o kdeneur-moc_edithotkey.obj `if test -f 'moc_edithotkey.cpp'; then $(CYGPATH_W) 'moc_edithotkey.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_edithotkey.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_edithotkey.Tpo $(DEPDIR)/kdeneur-moc_edithotkey.Po
#	$(AM_V_CXX)source='moc_edithotkey.cpp' object='kdeneur-moc_edithotkey.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_edithotkey.obj `if test -f 'moc_edithotkey.cpp'; then $(CYGPATH_W) 'moc_edithotkey.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_edithotkey.cpp'; fi`

kdeneur-moc_frmabout.o: moc_frmabout.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_frmabout.o -MD -MP -MF $(DEPDIR)/kdeneur-moc_frmabout.Tpo -c -o kdeneur-moc_frmabout.o `test -f 'moc_frmabout.cpp' || echo '$(srcdir)/'`moc_frmabout.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_frmabout.Tpo $(DEPDIR)/kdeneur-moc_frmabout.Po
#	$(AM_V_CXX)source='moc_frmabout.cpp' object='kdeneur-moc_frmabout.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_frmabout.o `test -f 'moc_frmabout.cpp' || echo '$(srcdir)/'`moc_frmabout.cpp

kdeneur-moc_frmabout.obj: moc_frmabout.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_frmabout.obj -MD -MP -MF $(DEPDIR)/kdeneur-moc_frmabout.Tpo -c -o kdeneur-moc_frmabout.obj `if test -f 'moc_frmabout.cpp'; then $(CYGPATH_W) 'moc_frmabout.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_frmabout.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_frmabout.Tpo $(DEPDIR)/kdeneur-moc_frmabout.Po
#	$(AM_V_CXX)source='moc_frmabout.cpp' object='kdeneur-moc_frmabout.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_frmabout.obj `if test -f 'moc_frmabout.cpp'; then $(CYGPATH_W) 'moc_frmabout.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_frmabout.cpp'; fi`

kdeneur-moc_frmaddabbreviature.o: moc_frmaddabbreviature.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_frmaddabbreviature.o -MD -MP -MF $(DEPDIR)/kdeneur-moc_frmaddabbreviature.Tpo -c -o kdeneur-moc_frmaddabbreviature.o `test -f 'moc_frmaddabbreviature.cpp' || echo '$(srcdir)/'`moc_frmaddabbreviature.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_frmaddabbreviature.Tpo $(DEPDIR)/kdeneur-moc_frmaddabbreviature.Po
#	$(AM_V_CXX)source='moc_frmaddabbreviature.cpp' object='kdeneur-moc_frmaddabbreviature.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_frmaddabbreviature.o `test -f 'moc_frmaddabbreviature.cpp' || echo '$(srcdir)/'`moc_frmaddabbreviature.cpp

kdeneur-moc_frmaddabbreviature.obj: moc_frmaddabbreviature.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_frmaddabbreviature.obj -MD -MP -MF $(DEPDIR)/kdeneur-moc_frmaddabbreviature.Tpo -c -o kdeneur-moc_frmaddabbreviature.obj `if test -f 'moc_frmaddabbreviature.cpp'; then $(CYGPATH_W) 'moc_frmaddabbreviature.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_frmaddabbreviature.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_frmaddabbreviature.Tpo $(DEPDIR)/kdeneur-moc_frmaddabbreviature.Po
#	$(AM_V_CXX)source='moc_frmaddabbreviature.cpp' object='kdeneur-moc_frmaddabbreviature.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_frmaddabbreviature.obj `if test -f 'moc_frmaddabbreviature.cpp'; then $(CYGPATH_W) 'moc_frmaddabbreviature.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_frmaddabbreviature.cpp'; fi`

kdeneur-moc_frmsettings.o: moc_frmsettings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_frmsettings.o -MD -MP -MF $(DEPDIR)/kdeneur-moc_frmsettings.Tpo -c -o kdeneur-moc_frmsettings.o `test -f 'moc_frmsettings.cpp' || echo '$(srcdir)/'`moc_frmsettings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_frmsettings.Tpo $(DEPDIR)/kdeneur-moc_frmsettings.Po
#	$(AM_V_CXX)source='moc_frmsettings.cpp' object='kdeneur-moc_frmsettings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_frmsettings.o `test -f 'moc_frmsettings.cpp' || echo '$(srcdir)/'`moc_frmsettings.cpp

kdeneur-moc_frmsettings.obj: moc_frmsettings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_frmsettings.obj -MD -MP -MF $(DEPDIR)/kdeneur-moc_frmsettings.Tpo -c -o kdeneur-moc_frmsettings.obj `if test -f 'moc_frmsettings.cpp'; then $(CYGPATH_W) 'moc_frmsettings.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_frmsettings.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_frmsettings.Tpo $(DEPDIR)/kdeneur-moc_frmsettings.Po
#	$(AM_V_CXX)source='moc_frmsettings.cpp' object='kdeneur-moc_frmsettings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_frmsettings.obj `if test -f 'moc_frmsettings.cpp'; then $(CYGPATH_W) 'moc_frmsettings.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_frmsettings.cpp'; fi`

kdeneur-moc_getnameapp.o: moc_getnameapp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_getnameapp.o -MD -MP -MF $(DEPDIR)/kdeneur-moc_getnameapp.Tpo -c -o kdeneur-moc_getnameapp.o `test -f 'moc_getnameapp.cpp' || echo '$(srcdir)/'`moc_getnameapp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_getnameapp.Tpo $(DEPDIR)/kdeneur-moc_getnameapp.Po
#	$(AM_V_CXX)source='moc_getnameapp.cpp' object='kdeneur-moc_getnameapp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_getnameapp.o `test -f 'moc_getnameapp.cpp' || echo '$(srcdir)/'`moc_getnameapp.cpp

kdeneur-moc_getnameapp.obj: moc_getnameapp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_getnameapp.obj -MD -MP -MF $(DEPDIR)/kdeneur-moc_getnameapp.Tpo -c -o kdeneur-moc_getnameapp.obj `if test -f 'moc_getnameapp.cpp'; then $(CYGPATH_W) 'moc_getnameapp.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_getnameapp.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_getnameapp.Tpo $(DEPDIR)/kdeneur-moc_getnameapp.Po
#	$(AM_V_CXX)source='moc_getnameapp.cpp' object='kdeneur-moc_getnameapp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_getnameapp.obj `if test -f 'moc_getnameapp.cpp'; then $(CYGPATH_W) 'moc_getnameapp.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_getnameapp.cpp'; fi`

kdeneur-moc_kdeneur.o: moc_kdeneur.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_kdeneur.o -MD -MP -MF $(DEPDIR)/kdeneur-moc_kdeneur.Tpo -c -o kdeneur-moc_kdeneur.o `test -f 'moc_kdeneur.cpp' || echo '$(srcdir)/'`moc_kdeneur.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_kdeneur.Tpo $(DEPDIR)/kdeneur-moc_kdeneur.Po
#	$(AM_V_CXX)source='moc_kdeneur.cpp' object='kdeneur-moc_kdeneur.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_kdeneur.o `test -f 'moc_kdeneur.cpp' || echo '$(srcdir)/'`moc_kdeneur.cpp

kdeneur-moc_kdeneur.obj: moc_kdeneur.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_kdeneur.obj -MD -MP -MF $(DEPDIR)/kdeneur-moc_kdeneur.Tpo -c -o kdeneur-moc_kdeneur.obj `if test -f 'moc_kdeneur.cpp'; then $(CYGPATH_W) 'moc_kdeneur.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_kdeneur.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_kdeneur.Tpo $(DEPDIR)/kdeneur-moc_kdeneur.Po
#	$(AM_V_CXX)source='moc_kdeneur.cpp' object='kdeneur-moc_kdeneur.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_kdeneur.obj `if test -f 'moc_kdeneur.cpp'; then $(CYGPATH_W) 'moc_kdeneur.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_kdeneur.cpp'; fi`

kdeneur-moc_kxneurtray.o: moc_kxneurtray.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_kxneurtray.o -MD -MP -MF $(DEPDIR)/kdeneur-moc_kxneurtray.Tpo -c -o kdeneur-moc_kxneurtray.o `test -f 'moc_kxneurtray.cpp' || echo '$(srcdir)/'`moc_kxneurtray.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_kxneurtray.Tpo $(DEPDIR)/kdeneur-moc_kxneurtray.Po
#	$(AM_V_CXX)source='moc_kxneurtray.cpp' object='kdeneur-moc_kxneurtray.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_kxneurtray.o `test -f 'moc_kxneurtray.cpp' || echo '$(srcdir)/'`moc_kxneurtray.cpp

kdeneur-moc_kxneurtray.obj: moc_kxneurtray.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_kxneurtray.obj -MD -MP -MF $(DEPDIR)/kdeneur-moc_kxneurtray.Tpo -c -o kdeneur-moc_kxneurtray.obj `if test -f 'moc_kxneurtray.cpp'; then $(CYGPATH_W) 'moc_kxneurtray.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_kxneurtray.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_kxneurtray.Tpo $(DEPDIR)/kdeneur-moc_kxneurtray.Po
#	$(AM_V_CXX)source='moc_kxneurtray.cpp' object='kdeneur-moc_kxneurtray.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_kxneurtray.obj `if test -f 'moc_kxneurtray.cpp'; then $(CYGPATH_W) 'moc_kxneurtray.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_kxneurtray.cpp'; fi`

kdeneur-moc_ruleschange.o: moc_ruleschange.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_ruleschange.o -MD -MP -MF $(DEPDIR)/kdeneur-moc_ruleschange.Tpo -c -o kdeneur-moc_ruleschange.o `test -f 'moc_ruleschange.cpp' || echo '$(srcdir)/'`moc_ruleschange.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_ruleschange.Tpo $(DEPDIR)/kdeneur-moc_ruleschange.Po
#	$(AM_V_CXX)source='moc_ruleschange.cpp' object='kdeneur-moc_ruleschange.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_ruleschange.o `test -f 'moc_ruleschange.cpp' || echo '$(srcdir)/'`moc_ruleschange.cpp

kdeneur-moc_ruleschange.obj: moc_ruleschange.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_ruleschange.obj -MD -MP -MF $(DEPDIR)/kdeneur-moc_ruleschange.Tpo -c -o kdeneur-moc_ruleschange.obj `if test -f 'moc_ruleschange.cpp'; then $(CYGPATH_W) 'moc_ruleschange.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_ruleschange.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_ruleschange.Tpo $(DEPDIR)/kdeneur-moc_ruleschange.Po
#	$(AM_V_CXX)source='moc_ruleschange.cpp' object='kdeneur-moc_ruleschange.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_ruleschange.obj `if test -f 'moc_ruleschange.cpp'; then $(CYGPATH_W) 'moc_ruleschange.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_ruleschange.cpp'; fi`

kdeneur-moc_xneurconfig.o: moc_xneurconfig.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_xneurconfig.o -MD -MP -MF $(DEPDIR)/kdeneur-moc_xneurconfig.Tpo -c -o kdeneur-moc_xneurconfig.o `test -f 'moc_xneurconfig.cpp' || echo '$(srcdir)/'`moc_xneurconfig.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_xneurconfig.Tpo $(DEPDIR)/kdeneur-moc_xneurconfig.Po
#	$(AM_V_CXX)source='moc_xneurconfig.cpp' object='kdeneur-moc_xneurconfig.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_xneurconfig.o `test -f 'moc_xneurconfig.cpp' || echo '$(srcdir)/'`moc_xneurconfig.cpp

kdeneur-moc_xneurconfig.obj: moc_xneurconfig.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -MT kdeneur-moc_xneurconfig.obj -MD -MP -MF $(DEPDIR)/kdeneur-moc_xneurconfig.Tpo -c -o kdeneur-moc_xneurconfig.obj `if test -f 'moc_xneurconfig.cpp'; then $(CYGPATH_W) 'moc_xneurconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_xneurconfig.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdeneur-moc_xneurconfig.Tpo $(DEPDIR)/kdeneur-moc_xneurconfig.Po
#	$(AM_V_CXX)source='moc_xneurconfig.cpp' object='kdeneur-moc_xneurconfig.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kdeneur_CXXFLAGS) $(CXXFLAGS) -c -o kdeneur-moc_xneurconfig.obj `if test -f 'moc_xneurconfig.cpp'; then $(CYGPATH_W) 'moc_xneurconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_xneurconfig.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS


# This rule lets GNU make create any moc_*.cpp from the equivalent *.h
moc_%.cpp: %.h
	moc-qt4 $< -o $@

ui_%.h: %.ui
	uic-qt4 $< -o $@

# Adjust this line according to your resources.qrc
resources.cpp : resources.qrc octave-gui.png
	rcc resources.qrc -o resources.cpp

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
